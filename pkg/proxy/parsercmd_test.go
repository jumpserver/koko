package proxy

import (
	"strings"
	"testing"

	"github.com/LeeEirc/terminalparser"
)

func TestCmdParser_Parse(t *testing.T) {
	var b = []byte("ifconfig \x08\x1b[K\x08\x1b[K\x08\x1b[K\x08\x1b[K\x08\x1b[K\x08\x1b[Konfig")
	s := terminalparser.Screen{
		Rows:   make([]*terminalparser.Row, 0, 1024),
		Cursor: &terminalparser.Cursor{},
	}
	data := s.Parse(b)
	if strings.Join(data, "") != "ifconfig" {
		t.Error("data should be ifconfig but not", data)
	}

	b = []byte("ifconfig\xe4\xbd\xa0")
	s = terminalparser.Screen{
		Rows:   make([]*terminalparser.Row, 0, 1024),
		Cursor: &terminalparser.Cursor{},
	}
	data = s.Parse(b)
	t.Log("line: ", strings.Join(data, ""))

}

func TestIsTmuxStatusBar(t *testing.T) {
	bar := []byte{
		0x1b, 0x5b, 0x3f, 0x32, 0x35, 0x6c, 0x1b, 0x5b, 0x33, 0x30, 0x6d, 0x1b, 0x5b, 0x34, 0x32, 0x6d,
		0x1b, 0x5b, 0x33, 0x39, 0x3b, 0x31, 0x48, 0x5b, 0x36, 0x30, 0x5d, 0x20, 0x30, 0x3a, 0x62, 0x61,
		0x73, 0x68, 0x2a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x65, 0x72,
		0x76, 0x65, 0x72, 0x22, 0x20, 0x30, 0x37, 0x3a, 0x33, 0x39, 0x20, 0x30, 0x38, 0x2d, 0x41, 0x75,
		0x67, 0x2d, 0x32, 0x35, 0x1b, 0x28, 0x42, 0x1b, 0x5b, 0x6d, 0x1b, 0x5b, 0x33, 0x3b, 0x32, 0x30,
		0x48, 0x1b, 0x5b, 0x3f, 0x31, 0x32, 0x6c, 0x1b, 0x5b, 0x3f, 0x32, 0x35, 0x68,
	}
	hasBar := tmuxBarRegx.Match(bar)
	hasBar2 := tmuxBar2Regx.Match(bar)
	t.Logf("hasbar: %v", hasBar)
	t.Logf("hasbar2: %v", hasBar2)

}
